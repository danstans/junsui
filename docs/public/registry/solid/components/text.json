{"files":[{"filename":"text.tsx","content":"import { mergeProps, splitProps } from 'solid-js'\nimport { Dynamic } from 'solid-js/web'\nimport { css, cx } from 'styled-system/css'\nimport { splitCssProps, type HTMLStyledProps } from 'styled-system/jsx'\nimport { text, type TextVariantProps } from 'styled-system/recipes'\n\ntype As = 'p' | 'span' | 'div' | 'label'\n\nexport type TextProps = TextVariantProps & {\n  as?: As\n} & HTMLStyledProps<As>\n\nexport const Text = (props: TextProps) => {\n  const mergedProps = mergeProps({ as: 'p' }, props)\n  const [variantProps, textProps] = splitProps(mergedProps, ['size', 'variant'])\n  const [cssProps, elementProps] = splitCssProps(textProps)\n  const [localProps, rootProps] = splitProps(elementProps, ['as', 'class'])\n  const className = text(variantProps)\n\n  return (\n    <Dynamic\n      component={localProps.as}\n      class={cx(className, css(cssProps), localProps.class)}\n      {...rootProps}\n    />\n  )\n}\n","hasMultipleParts":false}]}