{"files":[{"filename":"tree-view.tsx","content":"import { TreeView } from '@ark-ui/react/tree-view'\nimport type { ComponentProps } from 'react'\nimport { styled } from 'styled-system/jsx'\nimport { treeView } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(treeView)\n\nexport const Root = withProvider(styled(TreeView.Root), 'root')\nexport const Branch = withContext(styled(TreeView.Branch), 'branch')\nexport const BranchContent = withContext(styled(TreeView.BranchContent), 'branchContent')\nexport const BranchControl = withContext(styled(TreeView.BranchControl), 'branchControl')\nexport const BranchIndicator = withContext(styled(TreeView.BranchIndicator), 'branchIndicator')\nexport const BranchText = withContext(styled(TreeView.BranchText), 'branchText')\nexport const BranchTrigger = withContext(styled(TreeView.BranchTrigger), 'branchTrigger')\nexport const Item = withContext(styled(TreeView.Item), 'item')\nexport const ItemIndicator = withContext(styled(TreeView.ItemIndicator), 'itemIndicator')\nexport const ItemText = withContext(styled(TreeView.ItemText), 'itemText')\nexport const Label = withContext(styled(TreeView.Label), 'label')\nexport const Tree = withContext(styled(TreeView.Tree), 'tree')\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface BranchProps extends ComponentProps<typeof Branch> {}\nexport interface BranchContentProps extends ComponentProps<typeof BranchContent> {}\nexport interface BranchControlProps extends ComponentProps<typeof BranchControl> {}\nexport interface BranchIndicatorProps extends ComponentProps<typeof BranchIndicator> {}\nexport interface BranchTextProps extends ComponentProps<typeof BranchText> {}\nexport interface BranchTriggerProps extends ComponentProps<typeof BranchTrigger> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemIndicatorProps extends ComponentProps<typeof ItemIndicator> {}\nexport interface ItemTextProps extends ComponentProps<typeof ItemText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface TreeProps extends ComponentProps<typeof Tree> {}\n","hasMultipleParts":true}]}