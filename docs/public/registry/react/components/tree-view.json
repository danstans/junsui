{"files":[{"filename":"tree-view.tsx","content":"import { TreeView } from \"@ark-ui/react/tree-view\";\nimport type { ComponentProps } from \"react\";\nimport { styled } from \"~/styled-system/jsx\";\nimport { treeViewRecipe } from \"~/styled-system/recipes\";\nimport { createStyleContext } from \"~/lib/create-style-context\";\n\nconst { withProvider, withContext } = createStyleContext(treeViewRecipe);\n\nexport const Root = withProvider(styled(TreeView.Root), \"root\");\nexport const Branch = withContext(styled(TreeView.Branch), \"branch\");\nexport const BranchContent = withContext(\n  styled(TreeView.BranchContent),\n  \"branchContent\"\n);\nexport const BranchControl = withContext(\n  styled(TreeView.BranchControl),\n  \"branchControl\"\n);\nexport const BranchIndicator = withContext(\n  styled(TreeView.BranchIndicator),\n  \"branchIndicator\"\n);\nexport const BranchText = withContext(\n  styled(TreeView.BranchText),\n  \"branchText\"\n);\nexport const BranchTrigger = withContext(\n  styled(TreeView.BranchTrigger),\n  \"branchTrigger\"\n);\nexport const Item = withContext(styled(TreeView.Item), \"item\");\nexport const ItemText = withContext(styled(TreeView.ItemText), \"itemText\");\nexport const Label = withContext(styled(TreeView.Label), \"label\");\nexport const Tree = withContext(styled(TreeView.Tree), \"tree\");\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface BranchProps extends ComponentProps<typeof Branch> {}\nexport interface BranchContentProps\n  extends ComponentProps<typeof BranchContent> {}\nexport interface BranchControlProps\n  extends ComponentProps<typeof BranchControl> {}\nexport interface BranchIndicatorProps\n  extends ComponentProps<typeof BranchIndicator> {}\nexport interface BranchTextProps extends ComponentProps<typeof BranchText> {}\nexport interface BranchTriggerProps\n  extends ComponentProps<typeof BranchTrigger> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemTextProps extends ComponentProps<typeof ItemText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface TreeProps extends ComponentProps<typeof Tree> {}\n","hasMultipleParts":true}]}