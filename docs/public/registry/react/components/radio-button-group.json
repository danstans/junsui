{
  "files": [
    {
      "filename": "radio-button-group.tsx",
      "content": "import { RadioGroup as ArkRadioButtonGroup } from \"@ark-ui/react/radio-group\";\nimport type { ComponentProps } from \"react\";\nimport { styled } from \"~/styled-system/jsx\";\nimport { radioButtonGroupRecipe } from \"~/styled-system/recipes\";\nimport { createStyleContext } from \"~/lib/create-style-context\";\n\nconst { withProvider, withContext } = createStyleContext(\n  radioButtonGroupRecipe\n);\n\nexport const Root = withProvider(styled(ArkRadioButtonGroup.Root), \"root\");\nexport const Indicator = withContext(\n  styled(ArkRadioButtonGroup.Indicator),\n  \"indicator\"\n);\nexport const Item = withContext(styled(ArkRadioButtonGroup.Item), \"item\");\nexport const ItemControl = withContext(\n  styled(ArkRadioButtonGroup.ItemControl),\n  \"itemControl\"\n);\nexport const ItemText = withContext(\n  styled(ArkRadioButtonGroup.ItemText),\n  \"itemText\"\n);\nexport const Label = withContext(styled(ArkRadioButtonGroup.Label), \"label\");\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface IndicatorProps extends ComponentProps<typeof Indicator> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemControlProps extends ComponentProps<typeof ItemControl> {}\nexport interface ItemTextProps extends ComponentProps<typeof ItemText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\n",
      "hasMultipleParts": true
    }
  ]
}
