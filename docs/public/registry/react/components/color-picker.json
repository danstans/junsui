{"files":[{"filename":"color-picker.tsx","content":"import { ColorPicker } from \"@ark-ui/react/color-picker\";\nimport type { ComponentProps } from \"react\";\nimport { styled } from \"~/styled-system/jsx\";\nimport { colorPickerRecipe } from \"~/styled-system/recipes\";\nimport { createStyleContext } from \"~/lib/create-style-context\";\n\nconst { withProvider, withContext } = createStyleContext(colorPickerRecipe);\n\nexport const Root = withProvider(styled(ColorPicker.Root), \"root\");\nexport const Area = withContext(styled(ColorPicker.Area), \"area\");\nexport const AreaBackground = withContext(\n  styled(ColorPicker.AreaBackground),\n  \"areaBackground\"\n);\nexport const AreaThumb = withContext(\n  styled(ColorPicker.AreaThumb),\n  \"areaThumb\"\n);\nexport const ChannelInput = withContext(\n  styled(ColorPicker.ChannelInput),\n  \"channelInput\"\n);\nexport const ChannelSlider = withContext(\n  styled(ColorPicker.ChannelSlider),\n  \"channelSlider\"\n);\nexport const ChannelSliderThumb = withContext(\n  styled(ColorPicker.ChannelSliderThumb),\n  \"channelSliderThumb\"\n);\nexport const ChannelSliderTrack = withContext(\n  styled(ColorPicker.ChannelSliderTrack),\n  \"channelSliderTrack\"\n);\nexport const Content = withContext(styled(ColorPicker.Content), \"content\");\nexport const Control = withContext(styled(ColorPicker.Control), \"control\");\nexport const EyeDropperTrigger = withContext(\n  styled(ColorPicker.EyeDropperTrigger),\n  \"eyeDropperTrigger\"\n);\nexport const FormatSelect = withContext(\n  styled(ColorPicker.FormatSelect),\n  \"formatSelect\"\n);\nexport const FormatTrigger = withContext(\n  styled(ColorPicker.FormatTrigger),\n  \"formatTrigger\"\n);\nexport const Label = withContext(styled(ColorPicker.Label), \"label\");\nexport const Positioner = withContext(\n  styled(ColorPicker.Positioner),\n  \"positioner\"\n);\nexport const Swatch = withContext(styled(ColorPicker.Swatch), \"swatch\");\nexport const SwatchGroup = withContext(\n  styled(ColorPicker.SwatchGroup),\n  \"swatchGroup\"\n);\nexport const SwatchIndicator = withContext(\n  styled(ColorPicker.SwatchIndicator),\n  \"swatchIndicator\"\n);\nexport const SwatchTrigger = withContext(\n  styled(ColorPicker.SwatchTrigger),\n  \"swatchTrigger\"\n);\nexport const TransparencyGrid = withContext(\n  styled(ColorPicker.TransparencyGrid),\n  \"transparencyGrid\"\n);\nexport const Trigger = withContext(styled(ColorPicker.Trigger), \"trigger\");\nexport const ValueText = withContext(\n  styled(ColorPicker.ValueText),\n  \"valueText\"\n);\nexport const View = withContext(styled(ColorPicker.View), \"view\");\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface AreaProps extends ComponentProps<typeof Area> {}\nexport interface AreaBackgroundProps\n  extends ComponentProps<typeof AreaBackground> {}\nexport interface AreaThumbProps extends ComponentProps<typeof AreaThumb> {}\nexport interface ChannelInputProps\n  extends ComponentProps<typeof ChannelInput> {}\nexport interface ChannelSliderProps\n  extends ComponentProps<typeof ChannelSlider> {}\nexport interface ChannelSliderThumbProps\n  extends ComponentProps<typeof ChannelSliderThumb> {}\nexport interface ChannelSliderTrackProps\n  extends ComponentProps<typeof ChannelSliderTrack> {}\nexport interface ContentProps extends ComponentProps<typeof Content> {}\nexport interface ControlProps extends ComponentProps<typeof Control> {}\nexport interface EyeDropperTriggerProps\n  extends ComponentProps<typeof EyeDropperTrigger> {}\nexport interface FormatSelectProps\n  extends ComponentProps<typeof FormatSelect> {}\nexport interface FormatTriggerProps\n  extends ComponentProps<typeof FormatTrigger> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface PositionerProps extends ComponentProps<typeof Positioner> {}\nexport interface SwatchProps extends ComponentProps<typeof Swatch> {}\nexport interface SwatchGroupProps extends ComponentProps<typeof SwatchGroup> {}\nexport interface SwatchIndicatorProps\n  extends ComponentProps<typeof SwatchIndicator> {}\nexport interface SwatchTriggerProps\n  extends ComponentProps<typeof SwatchTrigger> {}\nexport interface TransparencyGridProps\n  extends ComponentProps<typeof TransparencyGrid> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\nexport interface ValueTextProps extends ComponentProps<typeof ValueText> {}\nexport interface ViewProps extends ComponentProps<typeof View> {}\n","hasMultipleParts":true}]}