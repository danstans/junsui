{
  "files": [
    {
      "filename": "file-upload.tsx",
      "content": "import { FileUpload } from \"@ark-ui/react/file-upload\";\nimport type { ComponentProps } from \"react\";\nimport { styled } from \"~/styled-system/jsx\";\nimport { fileUploadRecipe } from \"~/styled-system/recipes\";\nimport { createStyleContext } from \"~/lib/create-style-context\";\n\nconst { withProvider, withContext } = createStyleContext(fileUploadRecipe);\n\nexport const Root = withProvider(styled(FileUpload.Root), \"root\");\nexport const Dropzone = withContext(styled(FileUpload.Dropzone), \"dropzone\");\nexport const Item = withContext(styled(FileUpload.Item), \"item\");\nexport const ItemDeleteTrigger = withContext(\n  styled(FileUpload.ItemDeleteTrigger),\n  \"itemDeleteTrigger\"\n);\nexport const ItemGroup = withContext(styled(FileUpload.ItemGroup), \"itemGroup\");\nexport const ItemName = withContext(styled(FileUpload.ItemName), \"itemName\");\nexport const ItemPreview = withContext(\n  styled(FileUpload.ItemPreview),\n  \"itemPreview\"\n);\nexport const ItemPreviewImage = withContext(\n  styled(FileUpload.ItemPreviewImage),\n  \"itemPreviewImage\"\n);\nexport const ItemSizeText = withContext(\n  styled(FileUpload.ItemSizeText),\n  \"itemSizeText\"\n);\nexport const Label = withContext(styled(FileUpload.Label), \"label\");\nexport const Trigger = withContext(styled(FileUpload.Trigger), \"trigger\");\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface DropzoneProps extends ComponentProps<typeof Dropzone> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemDeleteTriggerProps\n  extends ComponentProps<typeof ItemDeleteTrigger> {}\nexport interface ItemGroupProps extends ComponentProps<typeof ItemGroup> {}\nexport interface ItemNameProps extends ComponentProps<typeof ItemName> {}\nexport interface ItemPreviewProps extends ComponentProps<typeof ItemPreview> {}\nexport interface ItemPreviewImageProps\n  extends ComponentProps<typeof ItemPreviewImage> {}\nexport interface ItemSizeTextProps\n  extends ComponentProps<typeof ItemSizeText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\n",
      "hasMultipleParts": true
    }
  ]
}
