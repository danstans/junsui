{"files":[{"filename":"progress.tsx","content":"import {\n  Progress as ArkProgress,\n  type ProgressRootProps,\n} from \"@ark-ui/react/progress\";\nimport { forwardRef, type ReactNode } from \"react\";\nimport { css, cx } from \"~/styled-system/css\";\nimport { splitCssProps } from \"~/styled-system/jsx\";\nimport {\n  progressRecipe,\n  type ProgressRecipeVariantProps,\n} from \"~/styled-system/recipes\";\nimport type { Assign, JsxStyleProps } from \"~/styled-system/types\";\n\nexport interface ProgressProps\n  extends Assign<JsxStyleProps, ProgressRootProps>,\n    ProgressRecipeVariantProps {\n  children?: ReactNode;\n  /**\n   * The type of progress to render.\n   * @default linear\n   */\n  type?: \"linear\" | \"circular\";\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  (props, ref) => {\n    const [variantProps, progressProps] =\n      progressRecipe.splitVariantProps(props);\n    const [cssProps, localProps] = splitCssProps(progressProps);\n    const { children, className, type = \"linear\", ...rootProps } = localProps;\n    const styles = progressRecipe(variantProps);\n\n    return (\n      <ArkProgress.Root\n        ref={ref}\n        className={cx(styles.root, css(cssProps), className)}\n        {...rootProps}\n      >\n        {children && (\n          <ArkProgress.Label className={styles.label}>\n            {children}\n          </ArkProgress.Label>\n        )}\n        {type === \"linear\" && (\n          <ArkProgress.Track className={styles.track}>\n            <ArkProgress.Range className={styles.range} />\n          </ArkProgress.Track>\n        )}\n        {type === \"circular\" && (\n          <ArkProgress.Circle className={styles.circle}>\n            <ArkProgress.CircleTrack className={styles.circleTrack} />\n            <ArkProgress.CircleRange className={styles.circleRange} />\n            <ArkProgress.ValueText className={styles.valueText} />\n          </ArkProgress.Circle>\n        )}\n        <ArkProgress.ValueText className={styles.valueText} />\n      </ArkProgress.Root>\n    );\n  }\n);\n\nProgress.displayName = \"Progress\";\n","hasMultipleParts":false}]}